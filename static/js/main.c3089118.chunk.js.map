{"version":3,"sources":["components/TODOlist.js","App.js","reportWebVitals.js","index.js"],"names":["TODOlist","useState","arr","setArr","inp","setInp","element","map","number","index","className","onClick","newlist","splice","handleDelete","class","type","value","placeholder","onChange","e","target","handleSubmit","event","preventDefault","console","log","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAmDeA,EAhDE,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACZC,EADY,KACPC,EADO,OAEGF,mBAAS,IAFZ,mBAEZG,EAFY,KAEPC,EAFO,KA4BbC,EAAUJ,EAAIK,KAAI,SAACC,EAAOC,GAAR,OACxB,qBAAIC,UAAU,WAAd,UAAwCF,EAAO,wBAASE,UAAU,eAAeC,QAAS,kBATrE,SAACF,GAEpB,IAAIG,EAAQV,EACZU,EAAQC,OAAOJ,EAAM,GACrBN,EAAO,YAAIS,IAKmFE,CAAaL,IAA9D,SAAsE,mBAAGM,MAAM,yBAAhGN,MAI9B,OACI,gCACI,oBAAIC,UAAU,UAAd,sBACJ,uBAAMA,UAAU,iBAAhB,UACE,uBAAOA,UAAU,YAAYM,KAAK,OAAOC,MAAOb,EAAKc,YAAY,mBAAmBC,SAlCvE,SAACC,GAEZf,EAAOe,EAAEC,OAAOJ,UAiClB,uBAAOP,UAAU,eAAeM,KAAK,SAASC,MAAM,MAAON,QA7B9C,SAAbW,EAAcC,GACP,KAANnB,GAGHD,GAAQ,SAAAD,GAAG,4BAAQA,GAAR,CAAaE,OACxBmB,EAAMC,iBACNC,QAAQC,IAAIJ,GACZjB,EAAO,UA0BL,8BAAMC,Q,MCjCDqB,MATf,WACE,OACE,qBAAKjB,UAAU,MAAf,SAEE,cAAC,EAAD,OCKSkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c3089118.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport './Todo.css';\r\n\r\nconst TODOlist = () => {\r\n    const [arr, setArr] = useState([]);\r\n    const [inp, setInp] = useState(\"\");\r\n    const handleChange=(e)=>{\r\n        \r\n            setInp(e.target.value);\r\n       \r\n    }\r\n\r\n    const handleSubmit=(event)=>{\r\n        if(inp!==\"\"){\r\n       // arr.push(inp);\r\n        \r\n        setArr( arr => [...arr, inp]); } \r\n        event.preventDefault();\r\n        console.log(handleSubmit);\r\n        setInp(\"\");\r\n    \r\n    }\r\n   \r\n    const handleDelete = (index) => {\r\n    //alert(index)\r\n      var newlist=arr;\r\n      newlist.splice(index,1);\r\n      setArr([...newlist]);\r\n        }\r\n\r\n  \r\n    const element = arr.map((number,index) =>\r\n    <li className=\"todotask\" key={index}  >{number}<button  className=\"removeButton\" onClick={() => handleDelete(index)}><i class=\"fas fa-trash-alt\"></i></button></li>)\r\n   \r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"heading\">TODOLIST</h1>\r\n        <form className=\"userinputfield\">\r\n          <input className=\"textField\" type=\"text\" value={inp} placeholder=\"Enter the text..\" onChange={handleChange}/>\r\n          <input className=\"submitbutton\" type=\"submit\" value=\"ADD\"  onClick={handleSubmit} />\r\n          \r\n          {/* {JSON.stringify(arr)}  */}\r\n          </form> \r\n          <div>{element}</div> \r\n           \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TODOlist;","import TODOlist from './components/TODOlist'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <TODOlist   />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}